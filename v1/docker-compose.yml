version: '3.3'
services:

  # default demo 可以通过 localhost:8000 访问
  python.default:
    build:
      context: ./python
    # 指定镜像名
    image: python:3.7.0
    # 挂载本地目录
    volumes:
      # 将default目录挂载至容器
      - ./www/default:/myapp/default
    command: uwsgi --ini /myapp/default/uwsgi.ini
    restart: always
    ports:
      - '8000:8000'
    container_name: python.default

  # mysite app 通过socket与nginx搭配使用
  python.mysite:
    build:
      context: ./python
    # 指定镜像名
    image: python:3.7.0
    # 挂载本地目录
    volumes:
      # 将default目录挂载至容器
      - ./www/mysite:/myapp/mysite
    command: uwsgi --ini /myapp/mysite/uwsgi.ini
    restart: always
    ports:
      # 容器内部走8000端口，外部端口自动分配
      - '8000'
    container_name: python.mysite

  # testsite app 通过socket与nginx搭配使用
  python.testsite:
    build:
      context: ./python
    # 指定镜像名
    image: python:3.7.0
    # 挂载本地目录
    volumes:
      # 将default目录挂载至容器
      - ./www/testsite:/myapp/testsite
    command: uwsgi --ini /myapp/testsite/uwsgi.ini
    restart: always
    ports:
      # 容器内部走8000端口，外部端口自动分配
      - '8000'
    container_name: python.testsite

  # web服务器 nginx
  nginx:
    image: nginx:1.15
    volumes:
      # 挂载本地nginx配置文件
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # 挂载本地nginx 域名配置目录
      - ./nginx/conf.d:/etc/nginx/conf.d
      # 挂载本地SSL证书目录
      - ./nginx/cert:/etc/nginx/cert
      # 挂载本地日志目录
      - ./nginx/log:/var/log/nginx
      # 挂载本地项目目录
      - ./www:/usr/share/nginx/html
    restart: always
    ports:
      - '80:80'
      - '81:81'
    container_name: nginx